using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Persistence.Migrations
{
    /// <inheritdoc />
    public partial class update_enums : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 96, 175, 200, 232, 193, 118, 227, 65, 112, 151, 75, 103, 144, 142, 231, 63, 27, 47, 136, 246, 11, 117, 107, 243, 181, 252, 89, 142, 251, 248, 44, 114, 149, 123, 102, 240, 165, 29, 119, 225, 156, 88, 231, 9, 238, 227, 56, 169, 213, 108, 172, 247, 208, 4, 150, 145, 97, 234, 237, 13, 202, 10, 87, 91, 187, 243, 139, 204, 46, 76, 196, 43, 88, 227, 248, 17, 255, 164, 143, 80, 131, 26, 199, 84, 247, 144, 175, 0, 164, 85, 33, 245, 99, 116, 240, 140, 253, 179, 216, 111, 245, 196, 90, 70, 230, 196, 232, 254, 54, 195, 27, 126, 138, 45, 30, 236, 155, 53, 82, 74, 63, 126, 194, 17, 51, 179, 185, 126 }, new byte[] { 94, 38, 193, 180, 158, 32, 113, 64, 80, 8, 155, 152, 202, 48, 166, 96, 167, 187, 193, 193, 35, 141, 49, 101, 74, 68, 98, 190, 37, 223, 92, 43, 213, 229, 144, 9, 51, 222, 156, 69, 93, 4, 42, 88, 197, 221, 85, 209, 57, 207, 154, 139, 59, 171, 199, 99, 130, 158, 163, 117, 197, 83, 127, 135 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 96, 175, 200, 232, 193, 118, 227, 65, 112, 151, 75, 103, 144, 142, 231, 63, 27, 47, 136, 246, 11, 117, 107, 243, 181, 252, 89, 142, 251, 248, 44, 114, 149, 123, 102, 240, 165, 29, 119, 225, 156, 88, 231, 9, 238, 227, 56, 169, 213, 108, 172, 247, 208, 4, 150, 145, 97, 234, 237, 13, 202, 10, 87, 91, 187, 243, 139, 204, 46, 76, 196, 43, 88, 227, 248, 17, 255, 164, 143, 80, 131, 26, 199, 84, 247, 144, 175, 0, 164, 85, 33, 245, 99, 116, 240, 140, 253, 179, 216, 111, 245, 196, 90, 70, 230, 196, 232, 254, 54, 195, 27, 126, 138, 45, 30, 236, 155, 53, 82, 74, 63, 126, 194, 17, 51, 179, 185, 126 }, new byte[] { 94, 38, 193, 180, 158, 32, 113, 64, 80, 8, 155, 152, 202, 48, 166, 96, 167, 187, 193, 193, 35, 141, 49, 101, 74, 68, 98, 190, 37, 223, 92, 43, 213, 229, 144, 9, 51, 222, 156, 69, 93, 4, 42, 88, 197, 221, 85, 209, 57, 207, 154, 139, 59, 171, 199, 99, 130, 158, 163, 117, 197, 83, 127, 135 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 125, 77, 57, 201, 162, 177, 220, 32, 208, 50, 123, 66, 137, 47, 71, 12, 169, 3, 233, 9, 53, 89, 38, 114, 104, 121, 190, 138, 116, 253, 226, 243, 206, 152, 98, 122, 249, 131, 135, 43, 61, 122, 222, 155, 239, 189, 173, 183, 63, 132, 218, 29, 36, 197, 214, 89, 240, 43, 89, 27, 109, 62, 80, 117 }, new byte[] { 202, 177, 188, 92, 106, 56, 116, 83, 160, 44, 8, 42, 73, 57, 232, 55, 41, 168, 189, 157, 87, 208, 21, 137, 89, 244, 12, 91, 154, 203, 110, 65, 130, 104, 137, 120, 32, 192, 31, 132, 154, 26, 19, 95, 144, 33, 50, 97, 109, 118, 92, 61, 149, 45, 102, 213, 232, 1, 121, 215, 137, 67, 157, 18, 171, 105, 239, 222, 228, 243, 239, 38, 133, 228, 18, 195, 153, 98, 114, 6, 61, 210, 163, 45, 230, 188, 38, 112, 107, 100, 55, 77, 26, 243, 88, 57, 76, 136, 189, 47, 158, 125, 62, 191, 96, 215, 183, 200, 142, 200, 40, 76, 178, 47, 132, 54, 52, 188, 199, 44 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 125, 77, 57, 201, 162, 177, 220, 32, 208, 50, 123, 66, 137, 47, 71, 12, 169, 3, 233, 9, 53, 89, 38, 114, 104, 121, 190, 138, 116, 253, 226, 243, 206, 152, 98, 122, 249, 131, 135, 43, 61, 122, 222, 155, 239, 189, 173, 183, 63, 132, 218, 29, 36, 197, 214, 89, 240, 43, 89, 27, 109, 62, 80, 117 }, new byte[] { 202, 177, 188, 92, 106, 56, 116, 83, 160, 44, 8, 42, 73, 57, 232, 55, 41, 168, 189, 157, 87, 208, 21, 137, 89, 244, 12, 91, 154, 203, 110, 65, 130, 104, 137, 120, 32, 192, 31, 132, 154, 26, 19, 95, 144, 33, 50, 97, 109, 118, 92, 61, 149, 45, 102, 213, 232, 1, 121, 215, 137, 67, 157, 18, 171, 105, 239, 222, 228, 243, 239, 38, 133, 228, 18, 195, 153, 98, 114, 6, 61, 210, 163, 45, 230, 188, 38, 112, 107, 100, 55, 77, 26, 243, 88, 57, 76, 136, 189, 47, 158, 125, 62, 191, 96, 215, 183, 200, 142, 200, 40, 76, 178, 47, 132, 54, 52, 188, 199, 44 } });
        }
    }
}
